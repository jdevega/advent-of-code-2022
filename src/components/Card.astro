---
import github from "/github.svg";
export interface Props {
  ranking: number;
  user: string;
  stars: number;
  score: number;
  last_star_ts: number;
  repo?: string;
}

const { ranking, user, stars, score, last_star_ts, repo } = Astro.props;

const date = last_star_ts && new Date((last_star_ts + 60 * 60) * 1000);
const hour = date && date.getHours();
const dateStr = date && date.toLocaleString("es-ES");
---

<li class="card">
  <h2 class="header">
    #{ranking}
    {user}
  </h2>
  <div class="score">
    {score} points
  </div>
  <div class="stars">{stars} stars</div>
  {
    repo && (
      <div class="repo">
        <a href={repo}>
          <img src={github} />
        </a>
      </div>
    )
  }
  <div
    class:list={[
      "last",
      {
        insane: date && hour < 7,
        "early-bird": date && hour < 8,
        "so-so": date && hour < 10,
      },
    ]}
  >
    {date ? `Last star at ${dateStr}` : ""}
  </div>
</li>
<style>
  .card {
    list-style: none;
    display: grid;
    padding: 0.5rem;
    gap: 0.5rem;
    background-color: white;
    border-radius: 0.5rem;
    border: 1px solid rgba(var(--accent), 25%);
    grid-template-areas: "header header header" "last last last" "score repo stars";
  }
  h2 {
    grid-area: header;
    margin: 0;
    font-size: 1.25rem;
  }
  .score {
    grid-area: score;
  }
  .stars {
    grid-area: stars;
    text-align: right;
  }
  .repo {
    grid-area: repo;
    text-align: center;
  }
  .repo img {
    width: 20px;
    height: 20px;
  }
  .last {
    grid-area: last;
    font-weight: 500;
  }
  .last.so-so {
    color: var(--so-so);
  }
  .last.early-bird {
    color: var(--early-bird);
  }
  .last.insane {
    color: var(--insane);
  }
  .card:is(:hover, :focus-within) h2 {
    color: rgb(var(--accent));
  }
</style>
